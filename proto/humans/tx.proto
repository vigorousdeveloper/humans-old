syntax = "proto3";
package humansdotai.humans.humans;

// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/humansdotai/humans/x/humans/types";

// Msg defines the Msg service.
service Msg {
      rpc RequestTransaction(MsgRequestTransaction) returns (MsgRequestTransactionResponse);
  rpc ObservationVote(MsgObservationVote) returns (MsgObservationVoteResponse);
  rpc UpdateBalance(MsgUpdateBalance) returns (MsgUpdateBalanceResponse);
  rpc ApproveTransaction(MsgApproveTransaction) returns (MsgApproveTransactionResponse);
  rpc TransferPoolcoin(MsgTransferPoolcoin) returns (MsgTransferPoolcoinResponse);
  rpc AddWhitelisted(MsgAddWhitelisted) returns (MsgAddWhitelistedResponse);
  rpc SetAdmin(MsgSetAdmin) returns (MsgSetAdminResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgRequestTransaction {
  string creator = 1;
  string originChain = 2;
  string originAddress = 3;
  string targetChain = 4;
  string targetAddress = 5;
  string amount = 6;
  string fee = 7;
}

message MsgRequestTransactionResponse {
}

message MsgObservationVote {
  string creator = 1;
  string txHash = 2;
  string chainName = 3;
  string from = 4;
  string to = 5;
  string amount = 6;
}

message MsgObservationVoteResponse {
}

message MsgUpdateBalance {
  string creator = 1;
  string chainName = 2;
  string balance = 3;
  string decimal = 4;
}

message MsgUpdateBalanceResponse {
}

message MsgApproveTransaction {
  string creator = 1;
  string txHash = 2;
  string success = 3;
  string signedKey = 4;
}

message MsgApproveTransactionResponse {
}

message MsgTransferPoolcoin {
  string creator = 1;
  string addr = 2;
  string pool = 3;
  string amt = 4;
}

message MsgTransferPoolcoinResponse {
}

message MsgAddWhitelisted {
  string creator = 1;
  string address = 2;
}

message MsgAddWhitelistedResponse {
}

message MsgSetAdmin {
  string creator = 1;
}

message MsgSetAdminResponse {
}

// this line is used by starport scaffolding # proto/tx/message
